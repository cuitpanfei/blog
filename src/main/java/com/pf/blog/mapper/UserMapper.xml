<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pf.blog.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.pf.blog.entity.User">
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="age" jdbcType="INTEGER" property="age" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.pf.blog.entity.withblobs.UserWithBLOBs">
    <result column="hobbies" jdbcType="LONGVARCHAR" property="hobbies" />
    <result column="birthday" jdbcType="LONGVARCHAR" property="birthday" />
  </resultMap>
  <sql id="Base_Column_List">
    userid, account_id, username, sex, email, age
  </sql>
  <sql id="Blob_Column_List">
    hobbies, birthday
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey4Account" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pf.blog.entity.withblobs.UserWithBLOBs">
    insert into user (userid, account_id, username, 
      sex, email, age, hobbies, 
      birthday)
    values (#{userid,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{hobbies,jdbcType=LONGVARCHAR}, 
      #{birthday,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pf.blog.entity.withblobs.UserWithBLOBs">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="hobbies != null">
        hobbies,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="hobbies != null">
        #{hobbies,jdbcType=LONGVARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pf.blog.entity.withblobs.UserWithBLOBs">
    update user
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="hobbies != null">
        hobbies = #{hobbies,jdbcType=LONGVARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pf.blog.entity.withblobs.UserWithBLOBs">
    update user
    set account_id = #{accountId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      hobbies = #{hobbies,jdbcType=LONGVARCHAR},
      birthday = #{birthday,jdbcType=LONGVARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pf.blog.entity.User">
    update user
    set account_id = #{accountId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>
