<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pf.blog.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.pf.blog.entity.Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="article_creat_time" property="articleCreatTime" jdbcType="TIMESTAMP" />
    <result column="article_type_id" property="articleTypeId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pf.blog.entity.ArticleWithBLOBs" extends="BaseResultMap" >
    <result column="article_title" property="articleTitle" jdbcType="LONGVARCHAR" />
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_id, article_creat_time, article_type_id
  </sql>
  <sql id="Blob_Column_List" >
    article_title, article_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pf.blog.entity.ArticleWithBLOBs" >
    insert into article (id, account_id, article_creat_time, 
      article_type_id, article_title, article_content
      )
    values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{articleCreatTime,jdbcType=TIMESTAMP}, 
      #{articleTypeId,jdbcType=INTEGER}, #{articleTitle,jdbcType=LONGVARCHAR}, #{articleContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pf.blog.entity.ArticleWithBLOBs" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="articleCreatTime != null" >
        article_creat_time,
      </if>
      <if test="articleTypeId != null" >
        article_type_id,
      </if>
      <if test="articleTitle != null" >
        article_title,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="articleCreatTime != null" >
        #{articleCreatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleTypeId != null" >
        #{articleTypeId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        #{articleTitle,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pf.blog.entity.ArticleWithBLOBs" >
    update article
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="articleCreatTime != null" >
        article_creat_time = #{articleCreatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleTypeId != null" >
        article_type_id = #{articleTypeId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        article_title = #{articleTitle,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pf.blog.entity.ArticleWithBLOBs" >
    update article
    set account_id = #{accountId,jdbcType=INTEGER},
      article_creat_time = #{articleCreatTime,jdbcType=TIMESTAMP},
      article_type_id = #{articleTypeId,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=LONGVARCHAR},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pf.blog.entity.Article" >
    update article
    set account_id = #{accountId,jdbcType=INTEGER},
      article_creat_time = #{articleCreatTime,jdbcType=TIMESTAMP},
      article_type_id = #{articleTypeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>