<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pf.blog.dao.ArticleTypeMapper" >
  <resultMap id="BaseResultMap" type="com.pf.blog.entity.ArticleType" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type_parent_id" property="typeParentId" jdbcType="INTEGER" />
    <result column="type_children_id" property="typeChildrenId" jdbcType="INTEGER" />
    <result column="type_level" property="typeLevel" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pf.blog.entity.ArticleType" extends="BaseResultMap" >
    <result column="type_name" property="typeName" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type_parent_id, type_children_id, type_level
  </sql>
  <sql id="Blob_Column_List" >
    type_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from articletype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from articletype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pf.blog.entity.ArticleType" >
    insert into articletype (id, type_parent_id, type_children_id, 
      type_level, type_name)
    values (#{id,jdbcType=INTEGER}, #{typeParentId,jdbcType=INTEGER}, #{typeChildrenId,jdbcType=INTEGER}, 
      #{typeLevel,jdbcType=INTEGER}, #{typeName,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pf.blog.entity.ArticleType" >
    insert into articletype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="typeParentId != null" >
        type_parent_id,
      </if>
      <if test="typeChildrenId != null" >
        type_children_id,
      </if>
      <if test="typeLevel != null" >
        type_level,
      </if>
      <if test="typeName != null" >
        type_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeParentId != null" >
        #{typeParentId,jdbcType=INTEGER},
      </if>
      <if test="typeChildrenId != null" >
        #{typeChildrenId,jdbcType=INTEGER},
      </if>
      <if test="typeLevel != null" >
        #{typeLevel,jdbcType=INTEGER},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pf.blog.entity.ArticleType" >
    update articletype
    <set >
      <if test="typeParentId != null" >
        type_parent_id = #{typeParentId,jdbcType=INTEGER},
      </if>
      <if test="typeChildrenId != null" >
        type_children_id = #{typeChildrenId,jdbcType=INTEGER},
      </if>
      <if test="typeLevel != null" >
        type_level = #{typeLevel,jdbcType=INTEGER},
      </if>
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pf.blog.entity.ArticleType" >
    update articletype
    set type_parent_id = #{typeParentId,jdbcType=INTEGER},
      type_children_id = #{typeChildrenId,jdbcType=INTEGER},
      type_level = #{typeLevel,jdbcType=INTEGER},
      type_name = #{typeName,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pf.blog.entity.ArticleType" >
    update articletype
    set type_parent_id = #{typeParentId,jdbcType=INTEGER},
      type_children_id = #{typeChildrenId,jdbcType=INTEGER},
      type_level = #{typeLevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>